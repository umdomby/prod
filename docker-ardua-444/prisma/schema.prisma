generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id         Int         @id @default(autoincrement())
  fullName   String
  email      String      @unique
  provider   String?
  providerId String?
  password   String
  role       UserRole    @default(USER)
  img        String?
  devices    Devices[]
  savedRooms SavedRoom[] // Связь с новой моделью
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Devices {
  id                Int         @id @default(autoincrement())
  userId            Int
  user              User        @relation(fields: [userId], references: [id])
  diviceName        String?
  devicesEnum       DevicesEnum @default(ArduaESP8266)
  idRoom            String?
  idDevice          String?
  idDeviceNotChange String?
  settings          Settings[]
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
}

model Settings {
  id        Int     @id @default(autoincrement())
  devicesId Int
  devices   Devices @relation(fields: [devicesId], references: [id])
  servo1    Int
  servo2    Int
  camera    Json
}

model SavedRoom {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  roomId    String   @unique // ID комнаты без тире
  isDefault Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum DevicesEnum {
  ArduaESP8266
}

enum UserRole {
  USER
  ADMIN
}

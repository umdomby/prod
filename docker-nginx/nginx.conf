worker_processes auto;

events {
worker_connections 1024;
}

http {

    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    include /etc/nginx/mime.types;
    sendfile on;
    keepalive_timeout 65;
    http2 on;

#     upstream backend {
#         server http://192.168.1.151:3000 max_fails=3 fail_timeout=5s;
#         #server nextjs1:3000 max_fails=3 fail_timeout=5s;
#         server nextjs2:3000 backup; # резервный сервер
#     }

    # Блок по умолчанию для localhost
    server {
        listen 80 default_server;
        server_name _;

            root /usr/share/nginx/ip;
            index index.html;

        location / {
            try_files $uri $uri/ =404;
        }
    }

    # Сайт 1
#     server {
#         listen 80;
#         server_name gamerecords.site;
#
#         location /.well-known/acme-challenge/ {
#             root /var/www/certbot;
#             allow all;
#         }
#
#         location / {
#             return 301 https://$host$request_uri;
#         }
#     }
#     server {
#         listen 443 ssl;
#         server_name gamerecords.site;
#
#         ssl_certificate /etc/letsencrypt/live/gamerecords.site/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/gamerecords.site/privkey.pem;
#
#         location / {
#             root /usr/share/nginx/gamerecords;
#             index index.html;
#         }
#     }

    # Сайт 2 anybet.site
#     server {
#         listen 80;
#         server_name anybet.site www.anybet.site;
#
#         location / {
#             return 301 https://anybet.site$request_uri;
#         }
#     }
#
#     server {
#         listen 80;
#         server_name anybet.site www.anybet.site;
#         return 301 https://anybet.site$request_uri;
#     }
#
#     server {
#         listen 443 ssl http2;
#         listen [::]:443 ssl http2;
#         server_name anybet.site www.anybet.site;
#
#         ssl_certificate /etc/letsencrypt/live/anybet.site/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/anybet.site/privkey.pem;
#         ssl_trusted_certificate /etc/letsencrypt/live/anybet.site/chain.pem;
#
#         # SSL optimization
#         ssl_session_cache shared:SSL:10m;
#         ssl_session_timeout 24h;
#         ssl_session_tickets off;
#         ssl_protocols TLSv1.2 TLSv1.3;
#         ssl_prefer_server_ciphers on;
#         ssl_stapling on;
#         ssl_stapling_verify on;
#
#         # Основные security headers
#         add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
#         add_header X-Frame-Options DENY always;
#         add_header X-Content-Type-Options nosniff always;
#         add_header Referrer-Policy "strict-origin" always;
#         # add_header Permissions-Policy "geolocation=(), microphone=('https://anybet.site'), camera=('https://anybet.site')" always;
#         add_header Permissions-Policy "geolocation=(), microphone=(self), camera=(self)" always;
#
#         # Статический контент React
#         location / {
#             proxy_pass http://192.168.1.151:3004;
#             # proxy_pass http://nextjs1:3000;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#             proxy_buffering off;
#             proxy_read_timeout 3600;
#         }
#         location /_next/webpack-hmr {
#             proxy_pass http://192.168.1.151:3004;
#             # proxy_pass http://webrtc_server:3000;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection "upgrade";
#             proxy_set_header Host $host;
#         }
#         # WebSocket endpoint
# #         location /ws {
# #             proxy_pass http://192.168.1.151:8080;
# #             # proxy_pass http://webrtc_server:8080;
# #             proxy_http_version 1.1;
# #             proxy_set_header Upgrade $http_upgrade;
# #             proxy_set_header Connection "upgrade";
# #             proxy_set_header Host $host;
# #             proxy_set_header X-Real-IP $remote_addr;
# #             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# #
# #             # Таймауты
# #             proxy_read_timeout 86400;
# #             proxy_send_timeout 86400;
# #             proxy_connect_timeout 86400;
# #
# #             # CORS для WebSocket
# #             if ($request_method = 'OPTIONS') {
# #                 add_header 'Access-Control-Allow-Origin' 'https://anybet.site';
# #                 add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
# #                 add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
# #                 add_header 'Access-Control-Max-Age' 1728000;
# #                 add_header 'Content-Length' 0;
# #                 return 204;
# #             }
# #
# #             # Отключаем буферизацию для WebSocket
# #             proxy_buffering off;
# #
# #             add_header 'Access-Control-Allow-Origin' 'https://anybet.site' always;
# #          }
#
#         # Отключаем доступ к .htaccess и другим скрытым файлам
#         location ~ /\.ht {
#             deny all;
#         }
#     }




    # Сайт 3
#     server {
#         listen 80;
#         server_name anycoin.site www.anycoin.site;
#
#         location / {
#             return 301 https://anycoin.site$request_uri;
#         }
#     }
#
#     server {
#         listen 443 ssl;
#         server_name www.anycoin.site;
#
#         ssl_certificate /etc/letsencrypt/live/anycoin.site/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/anycoin.site/privkey.pem;
#
#         return 301 https://anycoin.site$request_uri;
#     }
#
#     server {
#         listen 443 ssl;
#         server_name anycoin.site;
#
#         ssl_certificate /etc/letsencrypt/live/anycoin.site/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/anycoin.site/privkey.pem;
#
#         location / {
#             proxy_pass http://nextjs2:3000;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#             proxy_buffering off;
#             proxy_read_timeout 3600;
#         }
#     }


    # Сайт 4 ardu.site
#     server {
#         listen 80;
#         listen [::]:80;
#         server_name ardu.site www.ardu.site;
#         return 301 https://ardu.site$request_uri;
#     }
#
#     # HTTPS redirect from www to non-www
#     server {
#         listen 443 ssl;
#         listen [::]:443 ssl;
#         server_name www.ardu.site;
#         http2 on;
#
#         ssl_certificate /etc/letsencrypt/live/ardu.site/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/ardu.site/privkey.pem;
#
#         return 301 https://ardu.site$request_uri;
#     }
#
#     # Main HTTPS server
#     server {
#         listen 443 ssl;
#         listen [::]:443 ssl;
#         server_name ardu.site;
#         http2 on;
#
#         # SSL configuration
#         ssl_certificate /etc/letsencrypt/live/ardu.site/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/ardu.site/privkey.pem;
#         ssl_protocols TLSv1.2 TLSv1.3;
#         ssl_prefer_server_ciphers on;
#         ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
#
#         # Security headers
#         add_header X-Frame-Options "SAMEORIGIN" always;
#         add_header X-Content-Type-Options "nosniff" always;
#         add_header X-XSS-Protection "1; mode=block" always;
#         add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
#         add_header Referrer-Policy "strict-origin-when-cross-origin" always;
#
#         # SSL session cache
#         ssl_session_cache shared:SSL:10m;
#         ssl_session_timeout 10m;
#         ssl_session_tickets off;
#
#         # Root location
#         location / {
#             proxy_pass http://192.168.1.151:3003;
#             # proxy_pass http://ardu:3000;
#             proxy_http_version 1.1;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection "upgrade";
#             proxy_buffering off;
#             proxy_read_timeout 3600;
#             proxy_cache_bypass $http_upgrade;
#         }
#
#         location /_next/webpack-hmr {
#             proxy_pass http://192.168.1.151:1444;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection "upgrade";
#             proxy_set_header Host $host;
#             proxy_read_timeout 86400;
#             proxy_send_timeout 86400;
#             proxy_connect_timeout 86400;
#         }
#
#         # WebSocket endpoint
#         location /ws {
#             proxy_pass http://192.168.1.151:1444;
#             # proxy_pass http://ardu:1444;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection "upgrade";
#             proxy_set_header Host $host;
#             proxy_read_timeout 86400;
#             proxy_send_timeout 86400;
#             proxy_connect_timeout 86400;
#         }
#
#         # Block access to hidden files
#         location ~ /\.(?!well-known) {
#             deny all;
#             access_log off;
#             log_not_found off;
#         }
#
#         # Error handling
#         error_page 500 502 503 504 /50x.html;
#         location = /50x.html {
#             root /usr/share/nginx/html;
#             internal;
#         }
#     }

    # Сайт 5
#     server {
#           server_name it-startup.site www.it-startup.site;
#
#             location / {
#                 return 301 https://it-startup.site$request_uri;
#             }
#
#     }
#     server {
#         listen 443 ssl;
#         server_name it-startup.site;
#         ssl_certificate /etc/letsencrypt/live/it-startup.site/fullchain.pem;
#         ssl_certificate_key /etc/letsencrypt/live/it-startup.site/privkey.pem;
#         root /usr/share/nginx/it-startup;
#         index index.html;
#         location / {
#             try_files $uri $uri/ =404;
#         }
#     }
#
#     # Сайт 6
#     server {
#         listen 80;
#         server_name site1.local;
#         location / {
#             root /usr/share/nginx/html/site1;
#             index index.html;
#         }
#     }
#     # Сайт 7
#     server {
#         listen 80;
#         server_name site2.local;
#         location / {
#             root /usr/share/nginx/html/site2;
#             index index.html;
#         }
#     }

     # Сайт 7 ardua.site
    server {
        listen 80;
        listen [::]:80;
        server_name ardua.site www.ardua.site;
        return 301 https://ardua.site$request_uri;
    }

    # HTTPS redirect from www to non-www
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name www.ardua.site;
        http2 on;

        ssl_certificate /etc/letsencrypt/live/ardua.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ardua.site/privkey.pem;

        return 301 https://ardua.site$request_uri;
    }

    # Main HTTPS server
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name ardua.site;
        http2 on;

        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/ardua.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/ardua.site/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # SSL session cache
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;

        # Root location
        location / {
            # proxy_pass http://localhost:3001;
            # proxy_pass http://192.168.1.121:3001;
            proxy_pass http://ardua:3001;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_buffering off;
            proxy_read_timeout 3600;
            proxy_cache_bypass $http_upgrade;
        }

        location /wsgo {
            # proxy_pass http://localhost:8085;
            # proxy_pass http://192.168.1.121:8085;
            proxy_pass http://webrtc_server:8085;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Таймауты
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            proxy_connect_timeout 86400;

            # CORS для WebSocket
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'https://ardua.site';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Length' 0;
                return 204;
            }

            # Отключаем буферизацию для WebSocket
            proxy_buffering off;

            add_header 'Access-Control-Allow-Origin' 'https://ardua.site' always;
        }

#         location /_next/webpack-hmr {
#             proxy_pass http://192.168.1.141:8086;
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection "upgrade";
#             proxy_set_header Host $host;
#             proxy_read_timeout 86400;
#             proxy_send_timeout 86400;
#             proxy_connect_timeout 86400;
#         }

        # WebSocket endpoint
        location /wsar {
             # proxy_pass http://localhost:8086;
             # proxy_pass http://192.168.1.141:8086;
             proxy_pass http://websocket-server:8086;
             proxy_http_version 1.1;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection "upgrade";
             proxy_set_header Host $host;
             proxy_read_timeout 86400;
             proxy_send_timeout 86400;
             proxy_connect_timeout 86400;
        }

        # Block access to hidden files
        location ~ /\.(?!well-known) {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Error handling
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
}